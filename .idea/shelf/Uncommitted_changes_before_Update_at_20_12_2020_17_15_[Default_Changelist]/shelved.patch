Index: venv/Channel.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import string\r\nimport threading\r\nfrom typing import Any, Collection, Dict, List, Optional, Sequence, Set\r\n# import Server\r\nfrom Client import Client\r\nimport select\r\n\r\nimport socket\r\n\r\nHEADER_LENGTH = 10\r\n\r\nSocket = socket.socket\r\n\r\n\r\nclass Channel:\r\n    # https://github.com/jrosdahl/miniircd/blob/master/miniircd line 47\r\n    threadID = None\r\n\r\n    def __init__(self, server: \"Server\", name: str, serverSocket) -> None:\r\n        self.server = server\r\n        self.name = name\r\n\r\n        # TODO make sure that these dictionaries are kept up to date with each other\r\n        self.members_returns_socket: Dict[str, Socket] = {}\r\n        self.members_returns_name: Dict[Socket, str] = {}\r\n\r\n        self.threadID = threading.get_ident()\r\n        self.serverSocket = serverSocket\r\n        self.socketList = [serverSocket]\r\n        self.clientList = []\r\n\r\n    def update_dictionaries(self, client, client_socket):\r\n        self.members_returns_socket[client] = client_socket\r\n        self.members_returns_name[client_socket] = client\r\n        self.socketList.append(client_socket)\r\n        self.clientList.append(client)\r\n\r\n    def addMember(self, client, client_address, hostname) -> None:\r\n        print(client)\r\n        print(client_address)\r\n        self.update_dictionaries(client, client_address)\r\n        print(\"Member joined channel: \" + self.name)\r\n\r\n        # message = \":host MODE \" + self.name + \" +n \\r\\n\"\r\n        # self.server.sendMessage(client_address, message)\r\n\r\n        message = \":\" + client + \"!\" + client + \" ::1:6667\" + \" JOIN \" + self.name + \"\\r\\n\"\r\n        self.server.sendMessage(client_address, message)\r\n\r\n        # RPL_NOTOPIC (331)\r\n        textToSend = \":\" + hostname + \" 331 \" + client + \" \" + self.name + \" o o\\r\\n\"\r\n        self.server.sendMessage(client_address, textToSend)\r\n\r\n        message = client + \" @ \" + self.name + \" :\" + self.get_names(client) + \"\\r\\n\"\r\n        self.server.sendMessage(client_address, message)\r\n\r\n        message = client + \" \" + self.name + \" :\" + \"End of /NAMES list.\" + \"\\r\\n\"\r\n        self.server.sendMessage(client_address, message)\r\n\r\n    def get_names(self, client):\r\n        name_list = \"\"\r\n        for name in self.clientList:\r\n            if name == client:\r\n                name = \"@\" + client\r\n            if name_list:\r\n                name_list = name_list + \" \" + name\r\n            else:\r\n                name_list = name\r\n        return name_list\r\n\r\n    def remove_member(self, client):\r\n        print('Closed connection from: {}'.format(self.clientList[client]['msgData'].decode('utf-8')))\r\n\r\n        # Remove from list for socket.socket()\r\n        self.socketList.remove(client)\r\n\r\n        # Remove from our list of users\r\n        del self.clientList[client]\r\n\r\n    def distribute_message(self, notified_socket, user, message):\r\n        # Iterate over connected clients and broadcast message\r\n        for client_socket in self.socketList:\r\n\r\n            # But don't sent it to sender\r\n            if client_socket != notified_socket:\r\n                # Send user and message (both with their headers) We are reusing here message header sent\r\n                # by sender, and saved username header send by user when he connected client_socket.send(\r\n                # user['header'] + user['msgData'] + message['header'] + message['msgData'])\r\n\r\n                textToSend = \":\" + user['msgData'].decode(\"utf-8\") + \"!\" + user['msgData'].decode(\r\n                    \"utf-8\") + \"@\" + self.members[client_socket] + \" PRIVMSG \" + str(self.name) + \" :\" + \\\r\n                             message['msgData'].decode(\"utf-8\")  # NEED TO ENCODE AGAIN TO SEND\r\n                print(f'Sent Text: {textToSend}')\r\n                textToSend = textToSend.encode()\r\n                client_socket.send(textToSend)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Channel.py b/venv/Channel.py
--- a/venv/Channel.py	(revision acd11536f69e11ae2d112e8c6308934d08c2d114)
+++ b/venv/Channel.py	(date 1608484490890)
@@ -29,27 +29,18 @@
         self.socketList = [serverSocket]
         self.clientList = []
 
-    def update_dictionaries(self, client, client_socket):
-        self.members_returns_socket[client] = client_socket
-        self.members_returns_name[client_socket] = client
-        self.socketList.append(client_socket)
-        self.clientList.append(client)
-
-    def addMember(self, client, client_address, hostname) -> None:
+    def addMember(self, client, client_address) -> None:
         print(client)
         print(client_address)
-        self.update_dictionaries(client, client_address)
+        self.members_returns_socket[client] = client_address
+        self.clientList.append(client)
         print("Member joined channel: " + self.name)
 
-        # message = ":host MODE " + self.name + " +n \r\n"
-        # self.server.sendMessage(client_address, message)
-
-        message = ":" + client + "!" + client + " ::1:6667" + " JOIN " + self.name + "\r\n"
+        message = ":host MODE " + self.name + " +n \r\n"
         self.server.sendMessage(client_address, message)
 
-        # RPL_NOTOPIC (331)
-        textToSend = ":" + hostname + " 331 " + client + " " + self.name + " o o\r\n"
-        self.server.sendMessage(client_address, textToSend)
+        message = ":" + client + "!~" + client + " host" + " JOIN " + self.name + "\r\n"
+        self.server.sendMessage(client_address, message)
 
         message = client + " @ " + self.name + " :" + self.get_names(client) + "\r\n"
         self.server.sendMessage(client_address, message)
@@ -91,5 +82,4 @@
                     "utf-8") + "@" + self.members[client_socket] + " PRIVMSG " + str(self.name) + " :" + \
                              message['msgData'].decode("utf-8")  # NEED TO ENCODE AGAIN TO SEND
                 print(f'Sent Text: {textToSend}')
-                textToSend = textToSend.encode()
-                client_socket.send(textToSend)
+                self.server.sendMessage(client_socket, textToSend)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f1be31b5-c8ef-4130-9be8-a27a3aa594f2\" name=\"Default Changelist\" comment=\"trying to add luser\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_01_01__Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_01_01__Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_11_45__Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_11_45__Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/venv/Channel.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/venv/Channel.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/venv/Server.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/venv/Server.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"LeditsExperiment\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1lhIrjbhZZS14q1BeIrqZYkvW0j\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$USER_HOME$/AppData/Local/Programs/Python/Python39\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.Menu\">\r\n    <configuration default=\"true\" type=\"DjangoTestsConfigurationType\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"TARGET\" value=\"\" />\r\n      <option name=\"SETTINGS_FILE\" value=\"\" />\r\n      <option name=\"CUSTOM_SETTINGS\" value=\"false\" />\r\n      <option name=\"USE_OPTIONS\" value=\"false\" />\r\n      <option name=\"OPTIONS\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PyBehaveRunConfigurationType\" factoryName=\"Behave\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"ADDITIONAL_ARGS\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Python.FlaskServer\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Menu\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"ircServer\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\james\\AppData\\Local\\Programs\\Python\\Python39\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/venv\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/venv/Menu.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"bot\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\luked\\AppData\\Local\\Programs\\Python\\Python39\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/venv\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/venv/bot.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Docutils task\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Sphinx task\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"CLASS_NAME\" value=\"\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"FOLDER_NAME\" value=\"\" />\r\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\r\n      <option name=\"PATTERN\" value=\"\" />\r\n      <option name=\"USE_PATTERN\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.Menu\" />\r\n      <item itemvalue=\"Python.bot\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f1be31b5-c8ef-4130-9be8-a27a3aa594f2\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1608043098164</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1608043098164</updated>\r\n      <workItem from=\"1608463230317\" duration=\"3309000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Formatted\">\r\n      <created>1608043713599</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608043713599</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Formatted\">\r\n      <created>1608047784376</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608047784376</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Working direct message ad split\">\r\n      <created>1608242571790</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608242571790</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Almost completed bot need to tidy up and check with miniircd\">\r\n      <created>1608255602896</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608255602896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"fgg\">\r\n      <created>1608301927772</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608301927773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Tidy up the code\">\r\n      <created>1608321228393</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608321228393</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Working with IPv6 and fixed minor commands bugs\">\r\n      <created>1608398833760</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608398833760</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added !users command\">\r\n      <created>1608399589815</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608399589815</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added Quit\">\r\n      <created>1608413989489</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608413989489</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"[Stable] Can connect to bot, cannot  let them join a channel.\">\r\n      <created>1608419695940</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608419695940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"trying to add luser\">\r\n      <created>1608474974880</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1608474974880</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Formatted\" />\r\n    <MESSAGE value=\"Working direct message ad split\" />\r\n    <MESSAGE value=\"Almost completed bot need to tidy up and check with miniircd\" />\r\n    <MESSAGE value=\"fgg\" />\r\n    <MESSAGE value=\"Tidy up the code\" />\r\n    <MESSAGE value=\"Working with IPv6 and fixed minor commands bugs\" />\r\n    <MESSAGE value=\"Added !users command\" />\r\n    <MESSAGE value=\"Added Quit\" />\r\n    <MESSAGE value=\"[Stable] Can connect to bot, cannot  let them join a channel.\" />\r\n    <MESSAGE value=\"trying to add luser\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"trying to add luser\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision acd11536f69e11ae2d112e8c6308934d08c2d114)
+++ b/.idea/workspace.xml	(date 1608484475516)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="f1be31b5-c8ef-4130-9be8-a27a3aa594f2" name="Default Changelist" comment="trying to add luser">
+    <list default="true" id="f1be31b5-c8ef-4130-9be8-a27a3aa594f2" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_01_01__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_01_01__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_11_45__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_12_2020_11_45__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_12_2020_12_47__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_12_2020_12_47__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_12_2020_13_48__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20_12_2020_13_48__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/venv/Channel.py" beforeDir="false" afterPath="$PROJECT_DIR$/venv/Channel.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/venv/Server.py" beforeDir="false" afterPath="$PROJECT_DIR$/venv/Server.py" afterDir="false" />
@@ -34,7 +36,7 @@
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
-    <property name="last_opened_file_path" value="$USER_HOME$/AppData/Local/Programs/Python/Python39" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/venv/Menu.py" />
   </component>
   <component name="RunManager" selected="Python.Menu">
     <configuration default="true" type="DjangoTestsConfigurationType">
@@ -68,33 +70,20 @@
       <module name="" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
       <option name="ADDITIONAL_ARGS" value="" />
-      <method v="2" />
-    </configuration>
-    <configuration default="true" type="Python.FlaskServer">
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="" />
-      <option name="IS_MODULE_SDK" value="false" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <module name="" />
-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
-      <option name="launchJavascriptDebuger" value="false" />
       <method v="2" />
     </configuration>
     <configuration name="Menu" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
-      <module name="ircServer" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
       <envs>
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
-      <option name="SDK_HOME" value="C:\Users\james\AppData\Local\Programs\Python\Python39\python.exe" />
+      <option name="SDK_HOME" value="C:\Users\luked\AppData\Local\Programs\Python\Python39\python.exe" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/venv" />
       <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/venv/Menu.py" />
       <option name="PARAMETERS" value="" />
@@ -149,6 +138,19 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
+    <configuration default="true" type="Python.FlaskServer">
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <module name="" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="launchJavascriptDebuger" value="false" />
+      <method v="2" />
+    </configuration>
     <configuration default="true" type="Tox" factoryName="Tox">
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -226,7 +228,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1608043098164</updated>
-      <workItem from="1608463230317" duration="3309000" />
+      <workItem from="1608463230317" duration="7558000" />
     </task>
     <task id="LOCAL-00001" summary="Formatted">
       <created>1608043713599</created>
@@ -298,14 +300,21 @@
       <option name="project" value="LOCAL" />
       <updated>1608419695940</updated>
     </task>
-    <task id="LOCAL-00011" summary="trying to add luser">
-      <created>1608474974880</created>
+    <task id="LOCAL-00011" summary="[Stable] Can connect to bot, cannot  let them join a channel.">
+      <created>1608466804295</created>
       <option name="number" value="00011" />
       <option name="presentableId" value="LOCAL-00011" />
       <option name="project" value="LOCAL" />
-      <updated>1608474974880</updated>
+      <updated>1608466804295</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="[Stable] Can connect to bot, cannot  let them join a channel. Sends channel mode.">
+      <created>1608468504513</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1608468504513</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -334,7 +343,11 @@
     <MESSAGE value="Added !users command" />
     <MESSAGE value="Added Quit" />
     <MESSAGE value="[Stable] Can connect to bot, cannot  let them join a channel." />
-    <MESSAGE value="trying to add luser" />
-    <option name="LAST_COMMIT_MESSAGE" value="trying to add luser" />
+    <MESSAGE value="[Stable] Can connect to bot, cannot  let them join a channel. Sends channel mode." />
+    <option name="LAST_COMMIT_MESSAGE" value="[Stable] Can connect to bot, cannot  let them join a channel. Sends channel mode." />
+  </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/IRC_Server_and_Client$Server.coverage" NAME="bot Coverage Results" MODIFIED="1608419111309" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/venv" />
+    <SUITE FILE_PATH="coverage/IRC_Server_and_Client$Menu.coverage" NAME="Menu Coverage Results" MODIFIED="1608470753099" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/venv" />
   </component>
 </project>
\ No newline at end of file
Index: venv/Server.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import ipaddress\r\nimport socket\r\nimport string\r\nfrom datetime import datetime\r\nfrom typing import Dict\r\nfrom Channel import Channel\r\nimport Client\r\nimport hashlib\r\nimport select\r\n\r\n# import irc\r\n\r\nSocket = socket.socket\r\nMSGLEN = 2048\r\n\r\n\r\nclass Server:\r\n    # https://github.com/jrosdahl/miniircd/blob/master/miniircd line 789\r\n    def __init__(self, ports=None, password=\"\", channel=\"test\", ipv6=ipaddress.ip_address('::1')) -> None:\r\n        self.members = {}\r\n        if ports is None:\r\n            ports = [6667]  # default port for server\r\n\r\n        self.name = socket.gethostname()\r\n        self.version_number = 0.5\r\n        self.created = datetime.today().strftime(\"at %X on %d %B,%Y\")\r\n\r\n        self.ports = ports\r\n        self.ipv6 = ipv6\r\n        self.socketList = []\r\n        self.serverSocket = Socket(family=socket.AF_INET6)\r\n\r\n        # self.listen = listen\r\n        # self.serverSocket.listen()\r\n\r\n        # this means that you can reuse addresses for reconnection\r\n        self.serverSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n\r\n        \"\"\"\r\n        if not password:\r\n            self.password = hashlib.sha224(b\"password\").hexdigest()\r\n        else:\r\n            self.password = password\r\n   \r\n        if self.ipv6:\r\n            self.address = socket.getaddrinfo(listen, None, proto=self.serverSocket.IPPROTO_TCP)\r\n        else:\r\n            self.ipv6 = \"[::1]\"\r\n            server_name_limit = 63  # This is from RFC.\r\n            self.name = socket.getfqdn()[:server_name_limit].encode()\r\n            print(\"Socket = \" + socket.getfqdn())\r\n        \"\"\"\r\n\r\n        self.socketList = [self.serverSocket]\r\n        self.channels: Dict[str, Channel] = {}  # key: irc_lower(channelname)\r\n        # self.clients: Dict[Socket, Client] = {}\r\n        self.usernames_returns_sockets: Dict[string, Socket] = {}  # username connected to socket\r\n        self.sockets_returns_username: Dict[Socket, string] = {}  # username connected to socket\r\n        self.nicknames: Dict[string, string] = {}  # nickname connected to username\r\n        # self.threads: Dict[bytes, Channel] = {}\r\n        self.initialiseServer()\r\n\r\n    def addChannel(self, name=\"test\") -> Channel:\r\n        name = \"#\" + name  # RCD channel names have to start with a hashtag\r\n        name = name[0:63]\r\n        channel = Channel(self, name, self.serverSocket)\r\n        self.serverSocket.listen()\r\n        # newThread = channel.threadID\r\n        self.channels[name] = channel\r\n        return channel\r\n\r\n    def initialiseServer(self):\r\n        # address = socket.getaddrinfo(str(self.ipv6), self.ports[0], proto=socket.IPPROTO_TCP)[0][4][0]\r\n        # address = [addr for addr in socket.getaddrinfo(self.ipv6, None) if socket.AF_INET6 == addr[0]]\r\n\r\n        self.serverSocket.bind((str(self.ipv6), self.ports[0]))\r\n        self.serverSocket.listen()\r\n\r\n        self.addChannel()\r\n        self.refreshServer()\r\n        \"\"\"\r\n        for port in self.ports:\r\n            s = socket.socket(\r\n                socket.AF_INET6 if self.ipv6 else socket.AF_INET,\r\n                socket.SOCK_STREAM,\r\n            )\r\n            s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n            s.bind((self.ipv6, port))\r\n            s.listen(5)\r\n            self.socketList.append(s)\r\n\r\n\r\n        self.serverSocket.bind((Socket, bytes(self.ports[0])))\r\n        self.serverSocket.listen()\r\n        \"\"\"\r\n\r\n    # TODO find what channel the client wants to join\r\n    # TODO add that client to the list of channel members\r\n    def initReg(self) -> bool:\r\n        # Accept new connection\r\n        # That gives us new socket - client socket, connected to this given client only, it's unique for that client\r\n        # The other returned object is ip/port set\r\n\r\n        client_socket, client_address = self.serverSocket.accept()\r\n        # Client should send his name right away, receive it\r\n        cap = self.receiveMessage(client_socket)\r\n        user = self.receiveMessage(client_socket)\r\n\r\n        if not (cap and user):\r\n            return False\r\n        else:\r\n\r\n            userinfo = user.split()\r\n            nickname = userinfo[1]\r\n            username = userinfo[3]\r\n\r\n            self.usernames_returns_sockets[username] = client_socket\r\n\r\n            self.nicknames[nickname] = username\r\n\r\n            # print(\"message data: \" + user['msgData'].decode('utf-8'))\r\n            address = str(client_address[0])\r\n            port = int(client_address[1])\r\n\r\n            # Add accepted socket to select.select() list\r\n            self.socketList.append(client_socket)\r\n\r\n            # Also save username and username header\r\n            self.sockets_returns_username[client_socket] = username\r\n\r\n            # The following is according to https://modern.ircdocs.horse/#rplwelcome-001\r\n\r\n            # RPL_WELCOME (001)\r\n            textToSend = \":\" + self.name + \" 001 \" + nickname + \" :Welcome to the to the \" + self.name + \" Network, \" + nickname + \"[!\" + nickname + \"@\" + self.name + \"]\\r\\n\"\r\n            self.sendMessage(client_socket, textToSend)\r\n\r\n            # RPL_YOURHOST (002)\r\n            textToSend = \":\" + self.name + \" 002 \" + nickname + \" :Your host is \" + self.name + \", running version \" + str(self.version_number) + \\\r\n                         \"\\r\\n\"\r\n            self.sendMessage(client_socket, textToSend)\r\n\r\n            # RPL_CREATED (003)\r\n            textToSend = \":\" + self.name + \" 003 \" + nickname + \" :This server was created \" + self.created + \"\\r\\n\"\r\n            self.sendMessage(client_socket, textToSend)\r\n\r\n            # RPL_MYINFO (004)\r\n            textToSend = \":\" + self.name + \" 004 \" + nickname + \" \" + self.name + \" o o\\r\\n\"\r\n            self.sendMessage(client_socket, textToSend)\r\n\r\n            # RPL_ISUPPORT (005)\r\n            # textToSend = \":\" + self.name + \" 005 \" + nickname + \"CHARSET=ascii :are supported by this server \\r\\n\"\r\n            # self.sendMessage(client_socket, textToSend)\r\n\r\n            # ---- MOTD ----\r\n            self.motd(nickname, client_socket)\r\n\r\n            # ---- LUSER ----\r\n            self.luser(nickname, client_socket)\r\n            return True\r\n\r\n    def motd(self, nickname, client_socket):\r\n        # RPL_MOTDSTART (375)\r\n        textToSend = \":\" + self.name + \" 375 \" + nickname + \" :- \" + self.name + \" Message of the day - \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n        # RPL_MOTD (372)\r\n        textToSend = \":\" + self.name + \" 372 \" + nickname + \" :G'DAY MADLADZ \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n        # RPL_MOTDSTART (376)\r\n        textToSend = \":\" + self.name + \" 376 \" + nickname + \" :End of /MOTD command. \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n    def luser(self, nickname, client_socket):\r\n        # RPL_LUSERCLIENT (251)\r\n        textToSend = \":\" + self.name + \" 251 \" + nickname + \" :There are \" + str(len(self.nicknames)) + \" users and 0 services on 1 server \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n        # RPL_LUSEROP (252)\r\n        textToSend = \":\" + self.name + \" 252 \" + nickname + \" 0 :operator(s) online \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n        # RPL_LUSERUNKNOWN (253)\r\n        textToSend = \":\" + self.name + \" 253 \" + nickname + \" 0 :unknown connection(s) \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n        # RPL_LUSERCHANNELS(254)\r\n        textToSend = \":\" + self.name + \" 254 \" + nickname + \" 1 :channels formed \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n        # RPL_LUSERME (255)\r\n        textToSend = \":\" + self.name + \" 255 \" + nickname + \" :I have \" + str(len(self.nicknames)) + \" clients and 0 servers \\r\\n\"\r\n        self.sendMessage(client_socket, textToSend)\r\n\r\n    def receiveMessage(self, clientSocket):\r\n        chunk = clientSocket.recv(MSGLEN).decode(\"UTF-8\")\r\n        if chunk:\r\n            return chunk\r\n        else:\r\n            return None\r\n\r\n    def sendMessage(self, tosocket, msg):\r\n        print(\"SENT CHUNK: \" + msg)\r\n        total_sent = 0\r\n        while total_sent < len(msg):\r\n            to_send = bytes(msg[total_sent:], \"UTF-8\")\r\n            sent = tosocket.send(to_send)\r\n            if sent == 0:\r\n                raise RuntimeError(\"socket connection broken\")\r\n            total_sent = total_sent + sent\r\n\r\n    def refreshServer(self):\r\n        while True:\r\n            read_sockets, _, exception_sockets = select.select(self.socketList, [], self.socketList)\r\n\r\n            # Iterate over notified sockets\r\n            for notified_socket in read_sockets:\r\n\r\n                # If notified socket is a server socket - new connection, accept it\r\n                if notified_socket == self.serverSocket:\r\n                    if not self.initReg():\r\n                        continue\r\n\r\n                # Else existing socket is sending a message\r\n                else:\r\n\r\n                    # Receive message\r\n                    message = self.receiveMessage(notified_socket)\r\n\r\n                    # If False, client disconnected, cleanup\r\n                    if message is False:\r\n                        # Remove from list for socket.socket()\r\n                        self.removeClient(notified_socket)\r\n                        continue\r\n\r\n                    print(message)\r\n\r\n                    # Get user by notified socket, so we will know who sent the message\r\n                    user = self.sockets_returns_username[notified_socket]\r\n\r\n                    command_found = self.executeCommands(message, notified_socket)\r\n\r\n                    # We now want to see what channel the client is in, and send their message to the rest of the\r\n                    #   clients in that channel.\r\n\r\n                    \"\"\"\r\n                    print(\r\n                        f'Received message from {user[\"msgData\"].decode(\"utf-8\")}: {message[\"msgData\"].decode(\"utf-8\")}')\r\n                    \"\"\"\r\n            # It's not really necessary to have this, but will handle some socket exceptions just in case\r\n            for notified_socket in exception_sockets:\r\n                # Remove from list for socket.socket()\r\n                self.socketList.pop(notified_socket)\r\n\r\n                # Remove from our list of users\r\n                del self.sockets_returns_username[notified_socket]\r\n\r\n    def addMember(self, client, clientaddress) -> None:\r\n        self.members[client] = clientaddress\r\n\r\n    def removeClient(self, client, channel):\r\n        print('Closed connection from: {}'.format(self.clientList[client]['msgData'].decode('utf-8')))\r\n\r\n        # Remove from list for socket.socket()\r\n        self.socketList.remove(client)\r\n\r\n        # Remove from our list of users\r\n        del self.clientList[client]\r\n\r\n        self.channels[channel].remove_member(self.usernames[client])\r\n\r\n    def executeCommands(self, message, user) -> bool:\r\n        message = message.split()\r\n        command = message[0]\r\n        relatedData = message[1]\r\n        command_found = False\r\n        if command == \"JOIN\":\r\n            print(\"------message------\")\r\n            print(command)\r\n            self.joinChannel(relatedData, user)\r\n            command_found = True\r\n        elif command == \"PING\":\r\n            command_found = True\r\n            pass\r\n        elif command == \"PONG\":\r\n            command_found = True\r\n            pass\r\n        elif command.find(\"PRIVMSG\"):\r\n            channel = message.split('PRIVMSG', 1)[1].split(' ', 1)[1].split(' ', 1)[0]\r\n            print(channel)\r\n            PRIVMSG = message.split('PRIVMSG', 1)[1].split(':', 1)[1]\r\n            print(PRIVMSG)\r\n\r\n        return command_found\r\n\r\n    # TODO this has to be made so that (if a channel doesn't exist) the channel is created,\r\n    #   if it does already exist, the client has to be entered into it.\r\n    def joinChannel(self, channel, client_socket):\r\n        server_channel = self.channels[channel]\r\n        server_channel.addMember(self.sockets_returns_username[client_socket], client_socket, self.name)\r\n\r\n\r\n# from https://github.com/jrosdahl/miniircd/blob/master/miniircd lines 1053-1060\r\n_ircstring_translation = bytes.maketrans(\r\n    (string.ascii_lowercase.upper() + \"[]\\\\^\").encode(),\r\n    (string.ascii_lowercase + \"{}|~\").encode(),\r\n)\r\n\r\n\r\ndef irc_lower(s: bytes) -> bytes:\r\n    return s.translate(_ircstring_translation)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Server.py b/venv/Server.py
--- a/venv/Server.py	(revision acd11536f69e11ae2d112e8c6308934d08c2d114)
+++ b/venv/Server.py	(date 1608484475405)
@@ -135,7 +135,8 @@
             self.sendMessage(client_socket, textToSend)
 
             # RPL_YOURHOST (002)
-            textToSend = ":" + self.name + " 002 " + nickname + " :Your host is " + self.name + ", running version " + str(self.version_number) + \
+            textToSend = ":" + self.name + " 002 " + nickname + " :Your host is " + self.name + ", running version " + str(
+                self.version_number) + \
                          "\r\n"
             self.sendMessage(client_socket, textToSend)
 
@@ -173,7 +174,8 @@
 
     def luser(self, nickname, client_socket):
         # RPL_LUSERCLIENT (251)
-        textToSend = ":" + self.name + " 251 " + nickname + " :There are " + str(len(self.nicknames)) + " users and 0 services on 1 server \r\n"
+        textToSend = ":" + self.name + " 251 " + nickname + " :There are " + str(
+            len(self.nicknames)) + " users and 0 services on 1 server \r\n"
         self.sendMessage(client_socket, textToSend)
 
         # RPL_LUSEROP (252)
@@ -189,7 +191,8 @@
         self.sendMessage(client_socket, textToSend)
 
         # RPL_LUSERME (255)
-        textToSend = ":" + self.name + " 255 " + nickname + " :I have " + str(len(self.nicknames)) + " clients and 0 servers \r\n"
+        textToSend = ":" + self.name + " 255 " + nickname + " :I have " + str(
+            len(self.nicknames)) + " clients and 0 servers \r\n"
         self.sendMessage(client_socket, textToSend)
 
     def receiveMessage(self, clientSocket):
@@ -290,6 +293,8 @@
             print(channel)
             PRIVMSG = message.split('PRIVMSG', 1)[1].split(':', 1)[1]
             print(PRIVMSG)
+            sending_channel = self.channels[channel]
+            sending_channel.distribute_message(self.usernames_returns_sockets[user], user, PRIVMSG)
 
         return command_found
 
